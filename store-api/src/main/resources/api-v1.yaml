openapi: 3.0.9
info:
  title: Store API
  version: 1.0.0
  description: Store API specification.

paths:
  /api/v1/products:
    get:
      tags:
        - products
      summary: Get all products
      description: Retrieve a list of all products available in the store.
      operationId: getAllProducts
      responses:
        '200':
          description: A list of products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

  /api/v1/cart:
    post:
      tags:
        - cart
      summary: Add item to cart
      operationId: createCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartRequest'
      responses:
        '201':
          description: Cart created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'

  /api/v1/cart/{cartId}/buyer-reference:
    patch:
      tags:
        - cart
      summary: Sets buyer reference to the cart.
      operationId: setBuyerReference
      parameters:
        - in: path
          name: cartId
          schema:
            type: string
            format: uuid
          required: true
          description: Cart Id which which the buyer reference has to be set to.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyerReferenceRequest'
      responses:
        201:
          description: Buyer reference set successfully.

  /api/v1/order:
    post:
      tags:
        - order
      summary: Make an order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Cart created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  /api/v1/order/{orderId}:
    get:
      tags:
        - order
      summary: Get order by Id
      operationId: getOrderById
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
            format: uuid
          required: true
          description: Searchable order Id
      responses:
        '200':
          description: Get an order by its Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

components:
  schemas:
    ProductResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'

    Product:
      type: object
      properties:
        name:
          type: string
        price:
          $ref: '#/components/schemas/Price'
        isoCode:
          type: string

    CartRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'

    CartItem:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1

    CartResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'

    OrderRequest:
      type: object
      properties:
        cartId:
          type: string
          format: uuid

    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        orderDate:
          type: string
          format: date-time
        totalPrice:
          $ref: '#/components/schemas/Price'
        status:
          $ref: '#/components/schemas/OrderStatus'

    Price:
      type: object
      properties:
        amount:
          type: string
          pattern: '^-?\d+(\.\d{1,2})?$'
          example: "12345678901234567890.99"
        currency:
          type: string
          description: ISO 4217 currency code
          example: "EUR"

    OrderStatus:
      type: string
      enum:
        - PLACED,
        - CANCELLED
        - PAYMENT_PENDING
        - PAYMENT_COMPLETED
        - COMPLETED

    BuyerReferenceRequest:
      type: object
      properties:
        buyerId:
          type: string
          format: uuid