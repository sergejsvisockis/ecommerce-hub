user nginx;
events {
    worker_connections 1024;
}

http {
    # Use Docker's embedded DNS for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s ipv6=off;

    upstream order_service {
        least_conn;                     # better distribution under uneven load
        keepalive 32;                   # reuse connections to backends
        server order-service:8081 resolve;  # resolve to all scaled replicas' IPs
    }

    server {
        listen 80;

        location / {
            proxy_pass http://order_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";  # enable keepalive to upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}